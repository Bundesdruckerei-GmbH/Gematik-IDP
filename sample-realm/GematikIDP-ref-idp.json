{
  "id": "GematikIDP",
  "realm": "GematikIDP",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "01ee5e38-06f3-49cd-9e57-c33f06f272f1",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "GematikIDP",
        "attributes": {}
      },
      {
        "id": "c23776da-77a5-4b00-96b2-c6d0e70615ba",
        "name": "default-roles-gematikidp",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "GematikIDP",
        "attributes": {}
      },
      {
        "id": "e9db5b85-5b3f-4092-ac6d-4cce610101ba",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "GematikIDP",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "061a97ff-ca9b-4be9-a97c-1af2e4592b65",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "c3d2e948-16d4-4dc6-b8a3-441024078c86",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "888675b4-2c9f-4b09-9163-3ee92dbe70f0",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "b725def3-dc6a-4bbf-aa3b-3d55d4c398e8",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "create-client",
                "manage-realm",
                "view-clients",
                "manage-events",
                "query-users",
                "impersonation",
                "view-authorization",
                "view-identity-providers",
                "query-groups",
                "view-users",
                "manage-clients",
                "query-realms",
                "view-realm",
                "query-clients",
                "manage-users",
                "manage-authorization",
                "manage-identity-providers",
                "view-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "6d577112-155f-43d0-aec2-3879b7c78fd6",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "21cd82ee-034f-48ba-85ea-29003232f85e",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "80708bd8-223a-4763-adce-521825cfffe0",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "d7aeee45-c27c-4391-8284-0fadf9724445",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "14de308b-fe4f-49e8-be84-a96bddcf3c3e",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "f4d8ff9f-f299-40b7-bc5f-145be4362b81",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "f1dda738-6ebf-4fd1-8476-24a6325b96c2",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "129defaf-c2ad-4d32-baf8-47d77ae6cf59",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "9cd541d0-c4d7-423a-801c-e49a15896b37",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "5bd5b571-abf6-4bcf-8b3f-f70aa214158e",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "52e5ac6c-63f5-4ded-8893-2690075f2c70",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "a1dbd8ca-f41e-4991-ba87-bd9c20a93c51",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "564a44bd-cd95-44c4-b423-c881d747848b",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "08e986c3-9f10-4609-9099-c633c51717b0",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        },
        {
          "id": "25ff1597-e14d-4674-b80e-6fd8065606ad",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "c0a11d50-68da-48d9-a978-52cc210bed0f",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "96f00917-d26e-442d-a59d-00c58342bbd1",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "cf9cfd80-91ec-4197-9ffe-770a7d991e4a",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2213016-9dc6-4669-a6d8-d7dba751b839",
          "attributes": {}
        },
        {
          "id": "f836f782-e104-4865-b10d-4e68eff7a1f5",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d2213016-9dc6-4669-a6d8-d7dba751b839",
          "attributes": {}
        },
        {
          "id": "cd4b7785-1a52-4234-b8ce-30a933230dd3",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2213016-9dc6-4669-a6d8-d7dba751b839",
          "attributes": {}
        },
        {
          "id": "38586a28-a2ff-443a-9c6b-6d4ffe1431ad",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "d2213016-9dc6-4669-a6d8-d7dba751b839",
          "attributes": {}
        },
        {
          "id": "bb64a767-e7b1-405c-acff-3ac0392ad92d",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2213016-9dc6-4669-a6d8-d7dba751b839",
          "attributes": {}
        },
        {
          "id": "6652b3a1-a161-479c-a766-381a5a922f21",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2213016-9dc6-4669-a6d8-d7dba751b839",
          "attributes": {}
        },
        {
          "id": "aea5d4dd-10e2-4dd0-a39d-9f3b00bd0f28",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2213016-9dc6-4669-a6d8-d7dba751b839",
          "attributes": {}
        },
        {
          "id": "6ecb1a36-3101-4e75-8d41-2d0f423e9fc0",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "d2213016-9dc6-4669-a6d8-d7dba751b839",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "c23776da-77a5-4b00-96b2-c6d0e70615ba",
    "name": "default-roles-gematikidp",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "GematikIDP"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "d2213016-9dc6-4669-a6d8-d7dba751b839",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/GematikIDP/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/GematikIDP/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "007cf323-626c-475d-8ebc-1bd32436cda3",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/GematikIDP/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/GematikIDP/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "0f266625-e78d-4f5a-bd11-c185f4e42a65",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5060f7fa-43ce-4a45-93e3-d61e238f6000",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "96f00917-d26e-442d-a59d-00c58342bbd1",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "79e30dd5-582c-4d32-b5bd-4ebe2988efec",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "03e0ac8b-11ab-402f-9db3-d97684b80b31",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/GematikIDP/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/GematikIDP/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "ebae0438-94a7-4f9d-b198-91c782ae0906",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "ddaf67e7-58a2-475b-80aa-a375acd08ed4",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "cb445e5e-ec18-4306-ba41-e7035247e16a",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "2a9a7f3f-43cd-4026-9c97-fea05652c15c",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "22f72e05-75d7-4c64-8b52-45deb343ab92",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "abbce243-2264-46a8-ab48-8e1fc0684296",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "b51c4e93-0595-488a-9ded-6f6a51327fd3",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "65422844-02f9-4e13-b95b-726d508e4e7f",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "dcf82393-73e2-499d-80ea-a80138f6c666",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "05f95a8a-43bd-40de-97c7-18dd4fc07d8f",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "303a0c9d-e1e3-4c76-be4d-e41bda81c3c1",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8b822775-dd7d-43d5-876e-f4f34a3731be",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7f8a4a4e-c543-4f90-ae37-38407bb057b1",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4b9fbec8-a521-4c4a-9c5e-5aed5b60379f",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "da7771fa-4cfd-4f5d-b525-e7a532fe0bbe",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6f0acd4a-2002-4f89-9bb6-9b8d093c2055",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ec54d721-157f-4abb-ac2e-6b97aeaeebc4",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a301ea85-b3f4-46ef-9a9d-27a9882c6db1",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "776d9b76-0816-49ae-8ed8-df899108ad50",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "784e014d-33b4-497c-a7a8-5c4f059d4ee7",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8c6c75ca-78a1-4b33-b00e-c92ded151835",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "73146c44-8c48-494e-bc90-0015958f053d",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "f5ef419c-e9a5-41d6-8919-c7096fed8cb4",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0677a5bc-2331-4fcb-8e77-b069042606e8",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "9053941a-5a56-46d0-b753-1eb3db9b7706",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "bf6f7c8a-1787-40bf-a995-2fd9c581361f",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7afec963-59fd-4a3d-af03-b860c8c36362",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "95eef9bd-4945-40b5-b9c3-3c958d0b1af6",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "0ca6bf2d-a1eb-4978-85d8-c896ea722326",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "3f79397a-5101-4a08-ba93-d087fda82e74",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7c410413-6304-454c-ac5a-cad464ac5ea9",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "ac507163-a2cb-4bfb-9558-a3be0f6e2d88",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "4fa6b0bc-cde2-4556-a743-819ef6295946",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "bef3575e-1359-485b-8b29-d0776aba1cbc",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "fcb56026-e9ec-495c-aab7-77b032301869",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "60d75726-77fa-4c6c-82e5-1473be7fcf5d",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "aa5550c7-5a48-42cd-b262-2d0a369bee04",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "90001ea2-bbf4-4c62-951c-0153f6eb196b",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "profile",
    "acr",
    "web-origins",
    "email",
    "role_list",
    "roles"
  ],
  "defaultOptionalClientScopes": [
    "phone",
    "address",
    "microprofile-jwt",
    "offline_access"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "loginTheme": "gematik-idp",
  "adminTheme": "gematik-idp",
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [
    {
      "alias": "gematik-idp",
      "internalId": "58ddaa2a-96c2-402e-9415-b71f87f9994a",
      "providerId": "gematik-idp",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "clientId": "localhost",
        "multipleIdentityMode": "false",
        "idpTimeoutMs": "600000",
        "authenticationFlow": "MULTI",
        "openidConfigUrl": "http://host.docker.internal:8081/.well-known/openid-configuration",
        "newAuthenticationFlow": "true",
        "useJwksUrl": "true",
        "authenticatorUrl": "authenticator://",
        "authenticatorAuthorizationUrl": "http://localhost:8081/sign_response",
        "idpUserAgent": "servko/build bdr/localhost",
        "timeoutMs": "600000",
        "syncMode": "FORCE",
        "defaultScope": "openid gem-auth"
      }
    },
    {
      "alias": "gematik-idp-hba",
      "internalId": "43c7e3c6-84b9-47c4-b1ee-14bba3f83a46",
      "providerId": "gematik-idp",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "authenticatorUrl": "authenticator://",
        "clientId": "localhost_hba",
        "authenticatorAuthorizationUrl": "http://localhost:8081/sign_response",
        "idpUserAgent": "servko/build bdr/localhost_hba",
        "authenticationFlow": "HBA",
        "idpTimeoutMs": "600000",
        "openidConfigUrl": "http://host.docker.internal:8081/.well-known/openid-configuration",
        "timeoutMs": "600000",
        "syncMode": "FORCE",
        "defaultScope": "openid gem-auth",
        "useJwksUrl": "true"
      }
    },
    {
      "alias": "gematik-idp-smcb",
      "internalId": "83500eaa-826b-4bef-a617-7913a6548bc8",
      "providerId": "gematik-idp",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "authenticatorUrl": "authenticator://",
        "clientId": "localhost_smcb",
        "authenticatorAuthorizationUrl": "http://localhost:8081/sign_response",
        "idpUserAgent": "servko/build bdr/localhost_smcb",
        "authenticationFlow": "SMCB",
        "idpTimeoutMs": "600000",
        "openidConfigUrl": "http://host.docker.internal:8081/.well-known/openid-configuration",
        "timeoutMs": "600000",
        "syncMode": "FORCE",
        "defaultScope": "openid gem-auth",
        "useJwksUrl": "true"
      }
    }
  ],
  "identityProviderMappers": [
    {
      "id": "27f385ab-28d5-4cc1-90b8-622fb67fc5b3",
      "name": "smcb_profession_oid",
      "identityProviderAlias": "gematik-idp-hba",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_profession_oid",
        "claimAttribute": "PROFESSION_OID"
      }
    },
    {
      "id": "1178d980-f6b5-4de2-b727-2ea5aabef71f",
      "name": "smcb_family_name",
      "identityProviderAlias": "gematik-idp-smcb",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_family_name",
        "claimAttribute": "FAMILY_NAME"
      }
    },
    {
      "id": "54ef8443-a7e0-46a3-a2c7-8ddb05ca938e",
      "name": "hba_profession_oid",
      "identityProviderAlias": "gematik-idp",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_profession_oid",
        "claimAttribute": "PROFESSION_OID"
      }
    },
    {
      "id": "bf1c7144-787f-4bd6-a1d4-076fade8ac16",
      "name": "hba_given_name",
      "identityProviderAlias": "gematik-idp-smcb",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_given_name",
        "claimAttribute": "GIVEN_NAME"
      }
    },
    {
      "id": "95bd354d-0b05-4080-ac80-632655fb398a",
      "name": "smcb_family_name",
      "identityProviderAlias": "gematik-idp-hba",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_family_name",
        "claimAttribute": "FAMILY_NAME"
      }
    },
    {
      "id": "1d3b3a91-7d4e-41a3-9231-532032034454",
      "name": "smcb_profession_oid",
      "identityProviderAlias": "gematik-idp-smcb",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_profession_oid",
        "claimAttribute": "PROFESSION_OID"
      }
    },
    {
      "id": "16acce74-ccc8-4bd3-883c-5c9eeb614d40",
      "name": "smcb_organization_name",
      "identityProviderAlias": "gematik-idp",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_organization_name",
        "claimAttribute": "ORGANIZATION_NAME"
      }
    },
    {
      "id": "85ca1086-d587-427a-a106-95f54861e2d9",
      "name": "hba_family_name",
      "identityProviderAlias": "gematik-idp-smcb",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_family_name",
        "claimAttribute": "FAMILY_NAME"
      }
    },
    {
      "id": "0355e86f-4533-4b3a-b572-e70631db8ef2",
      "name": "hba_profession_oid",
      "identityProviderAlias": "gematik-idp-hba",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_profession_oid",
        "claimAttribute": "PROFESSION_OID"
      }
    },
    {
      "id": "03a2344b-557e-45aa-86a9-978eb61ddcd0",
      "name": "hba_family_name",
      "identityProviderAlias": "gematik-idp",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_family_name",
        "claimAttribute": "FAMILY_NAME"
      }
    },
    {
      "id": "abb3e540-a184-4a3e-a975-a3ca715d335a",
      "name": "smcb_organization_name",
      "identityProviderAlias": "gematik-idp-hba",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_organization_name",
        "claimAttribute": "ORGANIZATION_NAME"
      }
    },
    {
      "id": "b7a0ef83-669a-4d21-ac44-826b4c70d037",
      "name": "smcb_telematik_id",
      "identityProviderAlias": "gematik-idp-hba",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_telematik_id",
        "claimAttribute": "TELEMATIK_ID"
      }
    },
    {
      "id": "f3050322-3089-47b1-b247-205aea987a80",
      "name": "smcb_organization_name",
      "identityProviderAlias": "gematik-idp-smcb",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_organization_name",
        "claimAttribute": "ORGANIZATION_NAME"
      }
    },
    {
      "id": "7d24aaf9-aaa7-4f75-be8e-0533e5f0d098",
      "name": "smcb_given_name",
      "identityProviderAlias": "gematik-idp-smcb",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_given_name",
        "claimAttribute": "GIVEN_NAME"
      }
    },
    {
      "id": "23bc46c1-72ab-4ebb-8281-2dd5e9f73fae",
      "name": "hba_telematik_id",
      "identityProviderAlias": "gematik-idp-smcb",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_telematik_id",
        "claimAttribute": "TELEMATIK_ID"
      }
    },
    {
      "id": "ea1e883b-ad22-4535-add6-1ffa394d50dc",
      "name": "smcb_given_name",
      "identityProviderAlias": "gematik-idp",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_given_name",
        "claimAttribute": "GIVEN_NAME"
      }
    },
    {
      "id": "c301f66c-6027-4006-aec0-bba4f0284317",
      "name": "hba_profession_oid",
      "identityProviderAlias": "gematik-idp-smcb",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_profession_oid",
        "claimAttribute": "PROFESSION_OID"
      }
    },
    {
      "id": "3951b297-316c-42c1-98e6-5f107669560a",
      "name": "smcb_telematik_id",
      "identityProviderAlias": "gematik-idp-smcb",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_telematik_id",
        "claimAttribute": "TELEMATIK_ID"
      }
    },
    {
      "id": "b94a72f5-9657-47dd-b31c-c84c618b99da",
      "name": "hba_given_name",
      "identityProviderAlias": "gematik-idp",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_given_name",
        "claimAttribute": "GIVEN_NAME"
      }
    },
    {
      "id": "b46cb509-c57d-487f-b64b-c93d2412af68",
      "name": "hba_telematik_id",
      "identityProviderAlias": "gematik-idp",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_telematik_id",
        "claimAttribute": "TELEMATIK_ID"
      }
    },
    {
      "id": "580b9cbf-359f-4724-9d9b-bdedf4fcbad7",
      "name": "smcb_family_name",
      "identityProviderAlias": "gematik-idp",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_family_name",
        "claimAttribute": "FAMILY_NAME"
      }
    },
    {
      "id": "c70c12c3-6bae-4179-a4b0-09fad6c9ae3a",
      "name": "hba_given_name",
      "identityProviderAlias": "gematik-idp-hba",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_given_name",
        "claimAttribute": "GIVEN_NAME"
      }
    },
    {
      "id": "8b21dceb-3de2-4177-91e6-67ed06c8988c",
      "name": "hba_family_name",
      "identityProviderAlias": "gematik-idp-hba",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_family_name",
        "claimAttribute": "FAMILY_NAME"
      }
    },
    {
      "id": "b68e179d-9498-4535-8d79-ffa887b44a1c",
      "name": "smcb_telematik_id",
      "identityProviderAlias": "gematik-idp",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_telematik_id",
        "claimAttribute": "TELEMATIK_ID"
      }
    },
    {
      "id": "3a09b3e2-fe06-4fbc-91b3-cbf9a0059ef3",
      "name": "hba_telematik_id",
      "identityProviderAlias": "gematik-idp-hba",
      "identityProviderMapper": "gematik-idp-hba-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "hba_telematik_id",
        "claimAttribute": "TELEMATIK_ID"
      }
    },
    {
      "id": "e2fb7814-3713-4ae0-a891-91d1118e1066",
      "name": "smcb_given_name",
      "identityProviderAlias": "gematik-idp-hba",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_given_name",
        "claimAttribute": "GIVEN_NAME"
      }
    },
    {
      "id": "7516821f-661c-4d7b-a197-b75acc3272dd",
      "name": "smcb_profession_oid",
      "identityProviderAlias": "gematik-idp",
      "identityProviderMapper": "gematik-idp-smcb-user-mapper",
      "config": {
        "syncMode": "INHERIT",
        "userAttribute": "smcb_profession_oid",
        "claimAttribute": "PROFESSION_OID"
      }
    }
  ],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "fa54ba62-111c-4282-923b-524ae040fe5f",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "948b0b31-9206-49f7-9e71-674351664821",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "c1392e88-73e4-4998-8a39-08dea337b3fe",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "19be5339-3527-4763-9fde-a7bd220ac393",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      },
      {
        "id": "0549a42e-42d4-4421-8d8b-bee283ce6857",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "043de053-631f-483d-8f8c-a8ebe49fccdb",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "758355b2-d6b8-476f-9ef3-d7c7e3d6c04c",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "caff6ef9-4f5f-43e1-94ca-ad17fa374044",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "59da3508-a2ce-42a7-baa6-4e5c0df85f6a",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "7f42bc55-49a9-4697-94c7-3f31583acde9",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "d67624a4-4bce-4269-b284-7928c3441fb7",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "4036c113-2eac-4bf7-a492-daea987b544d",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [
    ""
  ],
  "authenticationFlows": [
    {
      "id": "96c511d2-54e6-48ac-afcf-64abf7fb6605",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "acaef63f-d3a6-4476-833d-51daded78bc8",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "56f5453a-fbbe-4762-9f54-263d2ecad066",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1e98b626-a03f-4d69-a63a-fdf9171ccaee",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ee68ed99-e985-48f6-be94-27719c444f4c",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f00d4621-879f-421d-98be-7836baf2f8ae",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1556bbe0-f134-4500-a7c2-eab7b01a8d1e",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9f0a76eb-59e9-4f3e-a485-1da94f9968c8",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "987eb8d4-38e9-40a2-a01a-33427237ea20",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9ccf5734-2d38-4582-8f26-32ff10ebbe26",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "24feba03-4871-4ce2-8cfe-4c61de5cb82e",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0bc0df54-2de6-4ebc-b4f9-76e0ebd53758",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d8e3346a-15a0-46e1-baaf-fe07e828b7b0",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e3c68257-e180-4ccf-b9ed-4cccd46f6903",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "121c1e51-6d1f-4d2d-a79b-98caa317e763",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0da2ba26-8967-4085-b635-46d2c4888ddd",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f8461986-cb8f-4abb-9e01-442b73400947",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "48c695e8-964d-476c-87d9-8cc3655104c1",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ddadf75d-2901-4e34-99a8-9331364ed978",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f3db5145-6b53-45e8-a53b-7f5c11a8f3db",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "d346f3ce-c645-45b0-bc4e-4f9aab01ed12",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "2e293f6a-f12e-41e1-8480-739f31f151a3",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "20.0.5",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
